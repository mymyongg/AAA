import numpy as np
import matplotlib.pyplot as plt

ours = np.load('plot_data_RL/ours.npz')
conv = np.load('plot_data_RL/conv.npz')

ours_time = ours.get('timestamp')
conv_time = conv.get('timestamp')

plt.rc('font', size=7)
# plt.rc('axes', titlesize=10)
plt.rc('axes', labelsize=7)
plt.rc('xtick', labelsize=7)
plt.rc('ytick', labelsize=7)
plt.rc('legend', fontsize=7)
# plt.rc('figure', titlesize=BIGGER_SIZE)

fig1 = plt.figure(figsize=(3.34, 1.0))
fig1.subplots_adjust(left=0.15, bottom=0.18, right=0.98, top=0.98)
# plt.plot(ours_time, ours.get('y0_true'), 'r', label='Uncertainty-aware')
# plt.plot(conv_time, conv.get('y0_true'), 'g--', label = 'Conventional')
plt.plot(ours_time, ours.get('y0_true'), 'r')
plt.plot(conv_time, conv.get('y0_true'), 'g--')
plt.xlim(0, 35)
plt.ylim(-1.75, 1.75)
plt.ylabel('$e_y$ [m]')
# plt.legend(loc=3)
plt.grid(True)

fig2 = plt.figure(figsize=(3.34, 1.0))
fig2.subplots_adjust(left=0.15, bottom=0.18, right=0.98, top=0.98)
plt.plot(ours_time, ours.get('unc_y10')**0.5, 'k')
plt.xlim(0, 35)
plt.ylabel('$\sigma^2_{e_y}$ [m$^2$]')
plt.grid(True)

fig3 = plt.figure(figsize=(3.34, 1.0))
fig3.subplots_adjust(left=0.15, bottom=0.18, right=0.98, top=0.98)
plt.plot(ours_time, ours.get('unc_eps10')**0.5, 'k')
plt.xlim(0, 35)
plt.ylabel('$\sigma^2_{e_\psi}$ [rad$^2$]')
plt.grid(True)

fig4 = plt.figure(figsize=(3.34, 1.0))
fig4.subplots_adjust(left=0.15, bottom=0.18, right=0.98, top=0.98)
# plt.plot(ours_time, ours.get('speed'), 'r', label='Uncertainty-aware')
# plt.plot(conv_time, conv.get('speed'), 'g--', label='Conventional')
plt.plot(ours_time, ours.get('speed'), 'r')
plt.plot(conv_time, conv.get('speed'), 'g--')
plt.xlim(0, 35)
# plt.legend(loc=4)
plt.ylabel('$v_x$ [m/s]')
plt.grid(True)

fig5 = plt.figure(figsize=(3.34, 1.2))
fig5.subplots_adjust(left=0.15, bottom=0.31, right=0.98, top=0.98)
# plt.plot(ours_time, ours.get('distance'), 'r', label='Uncertainty-aware')
# plt.plot(conv_time, conv.get('distance'), 'g--', label='Conventional')
plt.plot(ours_time, ours.get('distance'), 'r')
plt.plot(conv_time, conv.get('distance'), 'g--')
plt.xlim(0, 35)
# plt.legend(loc=4)
plt.xlabel('Time [s]')
plt.ylabel('Distance [m]')
plt.grid(True)

plt.show()